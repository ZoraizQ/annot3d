<Btn@Button>:
    color: 1, 1, 1, 1

<IconBtn@Button>:
    size_hint: None, None
    source: None
    background_normal: 'graphics/button_normal.png'
    background_down: 'graphics/button_down.png'

    canvas:
        Rectangle:
            source: root.source
            size: root.size[0]*0.8, root.size[1]*0.8
            pos: root.pos[0]+root.size[0]*0.1, root.pos[1]+root.size[1]*0.1

<SmallLabel@Label>:
    font_size: 12
    color: 0.9,0.9,0.9,1


<MainScreen@Screen>:
    orientation: "horizontal"
    #:set left_w 0.13

    BoxLayout:
        size_hint: left_w, 1
        orientation: "vertical"
        
        canvas.before:
            Color:
                rgba: 0.25, 0.25, 0.25, 1
            Rectangle:
                pos: self.pos
                size: self.size

        ActionBar:
            ActionView:
                ActionPrevious:
                    title: ''
                    with_previous: False
                    app_icon: ''
                    app_icon_width: 0
                    app_icon_height: 0
                    size_hint_x: None
                    width: len(self.title) * 10

                ActionGroup:
                    mode: 'spinner'
                    text: 'File'
                    dropdown_width: 140

                    ActionButton:
                        text: 'Open Src'
                        on_press: root.show_load(file_type='src')

                    ActionButton:
                        text: 'Load Annot'
                        on_press: root.show_load(file_type='annot')
        
                    ActionButton:
                        text: 'Save Annot'
                        on_press: root.show_save()

                    ActionButton:
                        text: 'Export'
                        on_press: root.show_export()

                    ActionButton:
                        text: 'Load Weights'
                        on_press: root.show_load(file_type='model_weights')


        GridLayout:
            size_hint: 1, 0.5
            cols: 2
            rows: 2
            padding: 2
            spacing: 2

            IconBtn:
                size_hint: 0.06, None
                size: self.size[0], self.size[0]
                source: 'graphics/brush.png'
                on_press: root.select_brush()
                                       
            IconBtn:
                size_hint: 0.06, None
                size: self.size[0], self.size[0]
                source: 'graphics/eraser.png'
                on_press: root.select_eraser()
                       
            IconBtn:
                size_hint: 0.06, None
                size: self.size[0], self.size[0]
                source: 'graphics/delete.png'
                on_press: root.clear()
                    
            IconBtn:
                size_hint: 0.06, None
                size: self.size[0], self.size[0]
                source: 'graphics/render.png'
                on_press: root.render_volume()

        BoxLayout:
            size_hint: 1, 0.5
            orientation: "vertical"
            spacing: 2
            padding: 2

            BoxLayout:
                orientation: "vertical"
                SmallLabel:
                    text: "Brush Size"
                Slider:
                    step : 1
                    value: 5
                    min: 1
                    max: 25
                    on_value : root.change_brush_size(*args)

            BoxLayout:
                orientation: "vertical"
                SmallLabel:
                    text: "Eraser Size"
                Slider:
                    step : 1
                    value: 5
                    min: 1
                    max: 25
                    on_value : root.change_eraser_size(*args)

            BoxLayout:
                orientation: "vertical"
                SmallLabel:
                    text: "Zoom"
                Slider:
                    id: gzoom
                    step : 0.1
                    value: 1.0
                    min: 1.0
                    max: 2.0

            BoxLayout:
                orientation: "vertical"
                SmallLabel:
                    text: "Brightness"
                Slider:
                    step : 2
                    value: 16
                    min: 2
                    max: 30
                    on_value : root.change_global_brightness(*args)

            BoxLayout:
                orientation: "vertical"
                SmallLabel:
                    text: "Contrast"
                Slider:
                    step : 4
                    value: 1
                    min: 1
                    max: 30
                    on_value : root.change_global_contrast(*args)

    RelativeLayout:
        #:set cmargin 20
        size_hint: 1-left_w, 1
        pos: root.size[0]*(left_w),0
        
        AnchorLayout:
            anchor_y: 'top'
            anchor_x: 'left'
            padding: cmargin

            Label: 
                font_size: 12
                id: current_slide_label
                size_hint: None, None # 0.05, 0.05
                size: 30, 20
                # pos: root.width*(left_w)-cmargin, root.height-self.size[1]+cmargin
                text:"xy: 1"
        
        AnchorLayout:
            anchor_y: 'top'
            anchor_x: 'right' if (root.size[0] < 800) else 'center'
            padding: cmargin

            PCanvas:
                gzoomfactor: gzoom.value
                size: [self.dy*gzoom.value, self.dx*gzoom.value] if not self.hidden else [0, 0]
                # pos: root.width-self.size[0]-cmargin, root.height-self.size[1]-cmargin
                size_hint: None, None #0.95, 0.05
                id: canvas_xz
                canvas.before:
                    Color:
                        rgba: 0.8, 1, 0.8, 1
                    Rectangle:
                        texture: self.bg_tex
                        pos: self.pos
                        size: self.size[0], self.size[1]
                    Rectangle:
                        texture: self.annot_tex
                        pos: self.pos
                        size: self.size[0], self.size[1]

        AnchorLayout:
            anchor_y: 'bottom'
            anchor_x: 'left'
            padding: cmargin

            PCanvas:
                gzoomfactor: gzoom.value
                size: [self.dy*gzoom.value, self.dx*gzoom.value] if not self.hidden else [0, 0]
                # pos: root.width*(left_w)+cmargin, 0+cmargin
                size_hint: None, None #0.05, 0.95
                id: canvas_yz
                canvas.before:
                    Color:
                        rgba: 1, 0.8, 0.8, 1
                    Rectangle:
                        texture: self.bg_tex
                        pos: self.pos
                        size: self.size
                    Rectangle:
                        texture: self.annot_tex
                        pos: self.pos
                        size: self.size

        AnchorLayout:
            anchor_y: 'bottom'  
            anchor_x: 'right' if (root.size[0] < 800) else 'center'
            padding: cmargin

            PCanvas:
                gzoomfactor: gzoom.value
                size: [self.dy*gzoom.value, self.dx*gzoom.value] if not self.hidden else [0, 0]
                # pos: root.width-self.size[0]-cmargin, 0+cmargin
                size_hint: None, None #0.95, 0.95
                id: canvas_xy
                canvas.before:
                    Color:
                        rgba: 0.8, 0.8, 1, 1
                    Rectangle:
                        texture: self.bg_tex
                        pos: self.pos
                        size: self.size
                    Rectangle:
                        texture: self.annot_tex
                        pos: self.pos
                        size: self.size
 
    

            

<LoadDialog>:
    BoxLayout:
        size: root.size
        pos: root.pos
        orientation: "vertical"
        FileChooserListView:
            id: filechooser
            path: '.'

        BoxLayout:
            size_hint_y: None
            height: 30
            Button:
                text: "Cancel"
                on_release: root.cancel()

            Button:
                text: "Load"
                on_release: root.load(filechooser.path, filechooser.selection)

<SaveDialog>:
    text_input: text_input
    BoxLayout:
        size: root.size
        pos: root.pos
        orientation: "vertical"
        FileChooserListView:
            id: filechooser
            path: '.'
            on_selection: text_input.text = self.selection and self.selection[0] or ''

        TextInput:
            id: text_input
            size_hint_y: None
            height: 30
            multiline: False

        BoxLayout:
            size_hint_y: None
            height: 30
            Button:
                text: "Cancel"
                on_release: root.cancel()

            Button:
                text: "Save"
                on_release: root.save(filechooser.path, text_input.text)

<ExportDialog>:
    text_input: text_input
    plane: 'xy'

    BoxLayout:
        size: root.size
        pos: root.pos
        orientation: "vertical"
        FileChooserListView:
            id: filechooser
            path: '.'
            on_selection: text_input.text = self.selection and self.selection[0] or ''

        TextInput:
            id: text_input
            size_hint_y: None
            height: 30
            multiline: False

        BoxLayout:
            size_hint_y: None
            height: 30
            Button:
                text: "Cancel"
                on_release: root.cancel()

            Button:
                text: "Export"
                on_release: root.export(filechooser.path, text_input.text, root.plane)
            
            BoxLayout:
                ToggleButton:
                    text: 'xy'
                    group: 'plane'
                    state: 'down'
                    on_press: root.plane = 'xy'
                    
                ToggleButton:
                    text: 'xz'
                    group: 'plane'
                    on_press: root.plane = 'xz'
                    
                ToggleButton:
                    text: 'yz'
                    group: 'plane'
                    on_press: root.plane = 'yz'
                    

                    




ScreenManagement:
    MainScreen:

